// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BioConnectSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Accelerate
@_exported import BioConnectSDK
import Combine
import CoreGraphics
import CoreMedia
import CoreVideo
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import Vision
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class SDKViewModel : Combine.ObservableObject {
  public var objectWillChange: Combine.PassthroughSubject<Swift.Void, Swift.Never>
  public init()
  public typealias ObjectWillChangePublisher = Combine.PassthroughSubject<Swift.Void, Swift.Never>
  @objc deinit
}
public class MeasurementAPI {
  public init(baseURL: Swift.String)
  @objc deinit
}
@_Concurrency.MainActor(unsafe) public struct BioConnectSDKView : SwiftUI.View {
  @SwiftUI.EnvironmentObject @_projectedValueProperty($measureViewModel) @_Concurrency.MainActor(unsafe) public var measureViewModel: BioConnectSDK.MeasurementViewModel {
    get
  }
  @_Concurrency.MainActor(unsafe) public var $measureViewModel: SwiftUI.EnvironmentObject<BioConnectSDK.MeasurementViewModel>.Wrapper {
    get
  }
  @SwiftUI.State @_projectedValueProperty($image) @_Concurrency.MainActor(unsafe) public var image: SwiftUI.Image {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  @_Concurrency.MainActor(unsafe) public var $image: SwiftUI.Binding<SwiftUI.Image> {
    get
  }
  @SwiftUI.State @_projectedValueProperty($resultTable) @_Concurrency.MainActor(unsafe) public var resultTable: [(Swift.String, Swift.String)] {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  @_Concurrency.MainActor(unsafe) public var $resultTable: SwiftUI.Binding<[(Swift.String, Swift.String)]> {
    get
  }
  @_Concurrency.MainActor(unsafe) public init()
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s13BioConnectSDK0aB7SDKViewV4bodyQrvp", 0) __
}
public struct MeasurementResult : Swift.Codable {
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
public class MeasurementViewModel : Foundation.ObservableObject {
  public var isMeasuring: Swift.Bool {
    get
  }
  @Combine.Published @_projectedValueProperty($result) public var result: Swift.Dictionary<Swift.String, Any> {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $result: Combine.Published<[Swift.String : Any]>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  public init(baseURL: Swift.String, showResultTable: Swift.Bool, measureTimer: Swift.Double)
  #if compiler(>=5.3) && $AsyncAwait
  public func measurement() async throws -> BioConnectSDK.MeasurementResult
  #endif
  public func sendInputValue() -> (Swift.Bool, Swift.Double)
  #if compiler(>=5.3) && $AsyncAwait
  public func process(image: UIKit.UIImage) async throws
  #endif
  @Combine.Published @_projectedValueProperty($currentBoundingBox) public var currentBoundingBox: CoreFoundation.CGRect? {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    _modify
  }
  public var $currentBoundingBox: Combine.Published<CoreFoundation.CGRect?>.Publisher {
    get
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    set
  }
  #if compiler(>=5.3) && $AsyncAwait
  public func bbox_info(image: UIKit.UIImage) async throws -> CoreFoundation.CGRect
  #endif
  public func reset()
  public typealias ObjectWillChangePublisher = Combine.ObservableObjectPublisher
  @objc deinit
}
